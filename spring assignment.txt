
8)
package org.meghana.java;
import org.springframework.beans.factory.DisposableBean;
import org.springframework.beans.factory.InitializingBean;
public class Restaruant implements InitializingBean,DisposableBean{ 
	public void greetCustomer() {
		System.out.println("Welcome dear customer!!This is the LifeCycle demo");
	}
	
	
	@Override
	public void destroy() throws Exception {
		// TODO Auto-generated method stub
		System.out.println("Restaruant Bean is going through afterpropertiesSet");
	}

	@Override
	public void afterPropertiesSet() throws Exception {
		// TODO Auto-generated method stub
		System.out.println("restaruant Bean is destorying now");
		
		
	}

}


package org.meghana.java;
import org.springframework.context.ApplicationContext;
public class TestSpring {

	public static void main(String[] args) {
		Applicationcontext context=
				new ClasspathXmlApplicationContext("SpringConfig.xml");
		
		((AbstractApplicationContext)context).registerShutdownHook();
		
		Restaruant restaruantObj =(Restaruant) context.getBean("restaruantBean");
		restaruantobj.greetCustomer();
		
	}

}


<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation=" http://www.springframework.org/schema/beans 
  http://www.springframework.org/schema/beans/spring-beans.xsd">
 <bean id="restaruntBean" class="org.gontuseries.springcore.Restaruant" 
 </bean>
<bean class="org.lifecycle.context.annotation.commonannotationBeanpostProcessor"/>

</beans>

9)
ackage org.meghana.java;

public class Restaruant {
	public void greetCustomer() {
		System.out.println("Welcome dear customer!!This is the LifeCycle demo");
	}
	public void init() {
		System.out.println("Restaruant Bean is going through init.");
	}
	public void destory() {
		System.out.println("Bean will destory now.");
	}

}


package org.meghana.java;

public class TestSpring {

	public static void main(String[] args) {
		Applicationcontext context=
				new ClasspathXmlApplicationContext("SpringConfig.xml");
		((AbstractApplicationContext)context).registerShutdownHook();
		Restaruant restaruantObj =(Restaruant) context.getBean("restaruantBean");
		
		restaruantobj.greetCustomer();
		
	}

}


<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation=" http://www.springframework.org/schema/beans 
  http://www.springframework.org/schema/beans/spring-beans.xsd">
<bean id="restaruntBean" class="org.gontuseries.springcore.Restaruant" init-method="init destory-method="destory">
</bean>
</beans>


10)
package org.meghana_java;
import org.Springframework.beams.factory.BeanFactory

public class DrawingApp {

	public static void main(String[] args) {
		//Triangle triangle = new Triangle();
		//BeanFactory factory = new XMLBenaFactory (new FileSystemResource("spring.xml"));
		ApplicationContext context =new classspathxmlApplcationContext("spring.xml");
		 Triangle triangle =(Triangle)factory.getBean("triangle");
		triangle.draw();
		
	}

}
package org.meghana_java;
import java.util.list

org.Springframework. beans.BeansEception ;
import org.Springframework.context.applicatinContext;
import org.Springframework.context.applicationContextAware;

public class Triangle  ApplicationContextAware ,BeanNameAware{
	private Point pointA;
	private Point pointb;
	private Point pointc;
	
	

public Point getPointA() {
		return pointA;
	}



	public void setPointA(Point pointA) {
		this.pointA = pointA;
	}



	public Point getPointb() {
		return pointb;
	}



	public void setPointb(Point pointb) {
		this.pointb = pointb;
	}



	public Point getPointc() {
		return pointc;
	}



	public void setPointc(Point pointc) {
		this.pointc = pointc;
	}



public void draw() {
	System.out.println("Point a=(" getPointa() .getx()+" ,"+getPointa().gety()+")");
	System.out.println("Point a=(" getPointa() .getx()+" ,"+getPointa().gety()+")");
	System.out.println("Point a=(" getPointa() .getx()+" ,"+getPointa().gety()+")");

}
@Override
public void setAplicationcontext(ApplicationContext context)
throws BeansException {
	this.context=context;
}
@Override
public void setBeans(StringbeanName) {
	System.out.println("Bean name is:" +beanName);
}

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN 2.0//EN" "http://www.springframework.org/dtd/spring-beans-2.0.dtd">


<beans>
<bean id="triangle" class="org.meghana.java.triangle"/>
<property name="x" value="0"/>
<property name ="pointA" ref="zeorpoint"/>
<property name ="pointb" ref="zeorpoint"/>
<property name ="pointc" ref="zeorpoint"/>
</beans>

 <bean id="zeropoint" class="org.meghana_java.point">
<property name="x"value="0"/>
<property name="x"value="0"/>

</bean>


 <bean id="point2" class="org.meghana_java.point">
<property name="x"value="-20"/>
<property name="x"value="0"/>

</bean>

 <bean id="point3" class="org.meghana_java.point">
<property name="x"value="+20"/>
<property name="x"value="0"/>

</bean>

 
 
 </bean>
 package org.meghana_java;

public class Point {
private int x; 
private int y;



public int getX() {
	return x;
}
public void setX(int x) {
	this.x = x;
}
public int getY() {
	return y;
}
public void setY(int y) {
	this.y = y;
}

}


